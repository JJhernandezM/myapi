name: Docker Image CI

on:
  push:
    branches:
      - main  # Esto se ejecuta en cada push a la rama main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Obtiene el código del repositorio

      - name: Log in to DockerHub
        uses: docker/login-action@v2  # Inicia sesión en DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nombre de usuario desde los secretos
          password: ${{ secrets.DOCKER_PASSWORD }}  # Contraseña o token desde los secretos

      - name: Build Docker Image
        run: |
          # Generar un tag único para la imagen usando el hash del commit
          IMAGE_TAG=jonso18/my-api:${GITHUB_SHA}  # Usa 'jonso18' como tu nombre de usuario en DockerHub
          # Construir la imagen de Docker
          docker build -t $IMAGE_TAG .
      
      - name: Push Docker Image
        run: |
          # Publicar la imagen a DockerHub
          docker push $IMAGE_TAG

      - name: Update Kubernetes Deployment YAML
        run: |
          # Actualizar el archivo k8s/deployment.yaml con el nuevo tag de la imagen
          IMAGE_TAG=jonso18/my-api:${GITHUB_SHA}  # Asegúrate de usar el mismo tag que usaste para construir la imagen
          sed -i 's|image: jonso18/my-api:.*|image: '"$IMAGE_TAG"'|' k8s/deployment.yaml  # Reemplaza el tag de la imagen

      - name: Commit and push updated deployment YAML
        run: |
          # Configurar el usuario de git para hacer el commit
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Hacer el commit de los cambios en el archivo deployment.yaml
          git add k8s/deployment.yaml
          git commit -m "Update image tag to ${GITHUB_SHA}"
          git push  # Hacer push de los cambios al repositorio
